{"version":3,"sources":["util/apiCaller.js","app/AppActions.js","app/AppReducer.js","app/DeploymentList/components/ListTable.js","app/DeploymentList/components/AddNewItemForm.js","app/DeploymentList/DeploymentList.js","app/components/Header.js","app/components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","callApi","endpoint","method","body","token","window","localStorage","getItem","headers","Authorization","fetch","JSON","stringify","then","response","json","ok","Promise","reject","error","loadDeploymentFetchingStatus","status","type","isFetchingDeployment","loadDeploymentDeletingStatus","id","loadAddItemStatus","isAdding","initialState","items","count","pageNum","pageSize","isDeleting","templates","getList","state","getPageNum","getPageSize","getTotalCount","getFetchStatus","getDeleteItemStatus","getAddItemStatus","getTemplates","appReducer","action","_","clone","filter","item","_id","push","ListTable","props","className","style","display","width","justifyContent","currentCount","Button","onClick","openAddItemForm","textAlign","border","borderRadius","padding","minWidth","list","length","map","index","color","url","templateName","version","deleteItem","disabled","colSpan","AddNewItemForm","useState","versions","handleVersion","handleVersionChange","handleUrl","template","handleTemplate","close","Form","horizontal","FormGroup","marginBottom","FormControl","onChange","e","target","value","placeholder","Col","sm","name","forEach","isValid","addItem","handleAddNewItem","DeploymentList","isOpenAddItemForm","handleAddItem","dispatch","useDispatch","currentState","useSelector","isFetching","useEffect","filters","res","data","console","log","deployments","fetchDeployment","loadDeleteItem","deleteDeployments","showModal","deployment","loadAddItem","addDeployment","Header","Footer","App","backgroundColor","position","Boolean","location","hostname","match","enhancers","applyMiddleware","thunk","store","createStore","compose","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"qQAGaA,EAAU,uCAER,SAASC,EAAQC,GAAiC,IAAvBC,EAAsB,uDAAb,MAAOC,EAAM,uCACxDC,EAAQC,OAAOC,aAAaC,QAAQ,SAAYF,OAAOC,aAAaC,QAAQ,SAAW,GACvFC,EAAU,CACdA,eAA0B,oBAI1B,OAHIJ,GAAkB,KAATA,IACTI,EAAQC,cAAR,iBAAkCL,IAE/BM,IAAM,GAAD,OAAIX,EAAJ,YAAeE,GAAY,CACnCO,QAASA,EACTN,SACAC,KAAMQ,KAAKC,UAAUT,KAEpBU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,MAAK,SAAAE,GAAI,MAAK,CAACA,OAAMD,kBACtDD,MAAK,YAAuB,IAArBE,EAAoB,EAApBA,KACJ,OADwB,EAAdD,SACIE,GAGPD,EAFIE,QAAQC,OAAOH,MAI7BF,MACG,SAAAC,GAAQ,OAAIA,KACZ,SAAAK,GAAK,OAAIA,KCLd,SAASC,EAA6BC,GACzC,MAAO,CACHC,KAnBuC,kCAoBvCC,uBAAwBF,GAmBzB,SAASG,EAA6BC,EAAIJ,GAC7C,MAAO,CACHC,KAxCqC,gCAyCrCG,GAAIA,EACJJ,SAAUA,GAiCX,SAASK,EAAkBL,GAC9B,MAAO,CACHC,KA1E4B,uBA2E5BK,WAAYN,G,4BCvEbO,EAAe,CAClBC,MAAO,GACPC,MAAO,EACPC,QAAS,EACTC,SAAU,GACVT,sBAAsB,EACtBU,WAAY,GACZN,UAAU,EACTO,UAAW,IAoEHC,EAAU,SAACC,GAAD,OAAWA,EAAMP,OAC3BQ,EAAa,SAACD,GAAD,OAAWA,EAAML,SAC9BO,EAAc,SAACF,GAAD,OAAWA,EAAMJ,UAC/BO,EAAgB,SAACH,GAAD,OAAWA,EAAMN,OACjCU,EAAiB,SAACJ,GAAD,OAAWA,EAAMb,sBAClCkB,EAAsB,SAACL,GAAD,OAAWA,EAAMH,YACvCS,EAAmB,SAACN,GAAD,OAAWA,EAAMT,UACpCgB,EAAe,SAACP,GAAD,OAAWA,EAAMF,WAE9BU,EAzEK,WAAmC,IAAlCR,EAAiC,uDAAzBR,EAAciB,EAAW,uCAC7CZ,EAAaG,EAAMH,WACnBJ,EAAQiB,IAAEC,MAAMX,EAAMP,OAC3B,OAAQgB,EAAOvB,MACX,IDzB4B,uBC0BxB,OAAO,2BACAc,GADP,IAEIP,MAAOgB,EAAOhB,MACdC,MAAOe,EAAOf,MACdC,QAASc,EAAOd,QAChBR,sBAAsB,IAG9B,IDjCuC,kCCkCnC,OAAO,2BACAa,GADP,IAEIb,qBAAsBsB,EAAOtB,uBAGrC,IDtCqC,gCCwCjC,OADAU,EAAWY,EAAOpB,IAAMoB,EAAOxB,OACxB,2BACAe,GADP,IAEIH,WAAYA,IAGpB,ID5C8B,yBC+C1B,OAFAA,EAAWY,EAAOpB,KAAM,EACxBI,EAAQA,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAQL,EAAOpB,MAC1C,2BACAW,GADP,IAEIP,MAAOA,EACPC,MAAOM,EAAMN,MAAQ,IAG7B,IDnD4B,uBCoDxB,OAAO,2BACAM,GADP,IAEIT,SAAUkB,EAAOlB,WAGzB,ID1DqB,gBC4DjB,OADAE,EAAMsB,KAAKN,EAAOI,MACX,2BACAb,GADP,IAEIP,MAAOA,EACPC,MAAOM,EAAMN,MAAQ,EACrBH,SAAUkB,EAAOlB,WAGzB,IDjEqB,gBCkEjB,OAAO,2BACAS,GADP,IAEIF,UAAWW,EAAOX,YAG1B,QACI,OAAO,eACAE,K,QC/EJ,SAASgB,EAAUC,GAC9B,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,gBACX,yBAAKC,MAAO,CAAEC,QAAS,cAAeC,MAAO,OAAQC,eAAgB,kBACjE,sDAAwBL,EAAMM,aAA9B,OACA,6BACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAMS,oBAA7B,eAIZ,yBAAKR,UAAU,cACX,2BAAOA,UAAU,QAAQC,MAAO,CAAEE,MAAO,OAAQM,UAAW,OAAQC,OAAQ,oBAAqBC,aAAc,QAC3G,4BACI,wBAAIV,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAA5C,UACA,wBAAIZ,MAAO,CAAEW,QAAS,MAAOC,SAAU,SAAvC,OACA,wBAAIZ,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAA5C,iBACA,wBAAIZ,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAA5C,WACA,wBAAIZ,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAA5C,WAGAd,EAAMe,MAAQf,EAAMe,KAAKC,OAAS,EAAIhB,EAAMe,KAAKE,KAAI,SAACrB,EAAMsB,GAAP,OACjD,wBAAIhB,MAAO,CAAEiB,MAAO,YAChB,wBAAIjB,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAAWI,EAAQ,GAC/D,wBAAIhB,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAAWlB,EAAKwB,KAC5D,wBAAIlB,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAAWlB,EAAKyB,cAC5D,wBAAInB,MAAO,CAAEW,QAAS,WAAYC,SAAU,SAAWlB,EAAK0B,SAC5D,wBAAIpB,MAAO,CAAEW,QAAS,WAAYC,SAAU,SACxC,kBAACP,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAMuB,WAAW3B,EAAKC,MAAM2B,SAAUxB,EAAMpB,WAAWgB,EAAKC,MAAOG,EAAMpB,WAAWgB,EAAKC,KAAO,WAAa,eAI5I,4BACI,wBAAI4B,QAAS,GAAIvB,MAAO,CAACQ,UAAW,WAChC,2CAQxB,yBAAKT,UAAU,gBACX,iDAAmBD,EAAMtB,QAAU,GAAKsB,EAAMrB,SAA9C,eAA6DqB,EAAMM,aAAnE,eAAsFN,EAAMvB,MAA5F,e,oCCwEDiD,MA3Gf,SAAwB1B,GAAQ,IAAD,EACO2B,mBAAS,IADhB,mBACpBC,EADoB,KACVC,EADU,OAEYF,mBAAS,IAFrB,mBAEpBL,EAFoB,KAEXQ,EAFW,OAGFH,mBAAS,IAHP,mBAGpBP,EAHoB,KAGfW,EAHe,OAIQJ,mBAAS,IAJjB,mBAIpBK,EAJoB,KAIVC,EAJU,KAyC3B,OACI,yBAAKhC,UAAU,eACX,yBAAKO,QAAS,kBAAMR,EAAMkC,SAASjC,UAAU,2BAC7C,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBAAf,kBAGA,yBAAKA,UAAU,gBACX,kBAACkC,EAAA,EAAD,CAAMC,YAAU,GACZ,kBAACC,EAAA,EAAD,CAAWnC,MAAO,CAACoC,aAAc,SAC7B,yBAAKrC,UAAU,eAAf,OACQ,0BAAMC,MAAO,CAACiB,MAAO,QAArB,MAER,6BACI,kBAACoB,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOV,EAAUU,EAAEC,OAAOC,QACpC1E,KAAK,OACLgC,UAAU,cACV2C,YAAa,iBAGzB,kBAACP,EAAA,EAAD,CAAWnC,MAAO,CAACoC,aAAc,SAC7B,yBAAKrC,UAAU,eAAf,iBACkB,0BAAMC,MAAO,CAACiB,MAAO,QAArB,MAElB,kBAAC0B,EAAA,EAAD,CAAKC,GAAI,GACL,4BAAU7C,UAAU,cAAc8C,KAAK,GAAG3E,GAAG,GAAGoE,SAAU,SAACC,GAzC9D,IAACrE,EAChB,MADgBA,EAyCwFqE,EAAEC,OAAOC,QAvCvHV,EAAe,IACfJ,EAAc,IACdC,EAAoB,KAEpB9B,EAAMnB,UAAUmE,SAAQ,SAAApD,GACjBA,EAAKC,MAAQzB,IACZ6D,EAAerC,GACfiC,EAAcjC,EAAKgC,gBAiCC,4BAAQe,MAAM,IAAd,yBAEI3C,EAAMnB,WAAamB,EAAMnB,UAAUmC,OAAS,GAAKhB,EAAMnB,UAAUoC,KAAI,SAAArB,GAAI,OACrE,4BAAQ+C,MAAO/C,EAAKC,KAAMD,EAAKmD,YAMnD,kBAACV,EAAA,EAAD,CAAWnC,MAAO,CAACoC,aAAc,SAC7B,yBAAKrC,UAAU,eAAf,WACY,0BAAMC,MAAO,CAACiB,MAAO,QAArB,MAEZ,kBAAC0B,EAAA,EAAD,CAAKC,GAAI,GACL,4BAAQ7C,UAAU,cAAcuB,SAA8B,IAApBI,EAASZ,OAAc+B,KAAK,GAAG3E,GAAG,GAAGoE,SAAU,SAACC,GAAD,OAAOX,EAAoBW,EAAEC,OAAOC,SACzH,4BAAQA,MAAM,IAAd,wBAEIf,GAAYA,EAASZ,OAAS,GAAKY,EAASX,KAAI,SAAArB,GAAI,OAChD,4BAAQ+C,MAAO/C,GAAOA,WAQlD,yBAAKK,UAAU,kBACX,yBAAKC,MAAO,CAAEC,QAAS,OAAQE,eAAgB,gBAAiBD,MAAO,SACnE,kBAACG,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAMkC,UAA7B,SACA,kBAAC3B,EAAA,EAAD,CAAQiB,SAAUxB,EAAM1B,SAAUkC,QAAS,kBAhF1C,WACrB,IAAIZ,EAAO,GACXA,EAAKwB,IAAMA,EACXxB,EAAKyB,aAAeW,EAASe,KAC7BnD,EAAK0B,QAAUA,EAjBH,SAAC1B,GACb,IAAIqD,GAAU,EAUd,OATMrD,EAAKwB,KAEExB,EAAKyB,cAGLzB,EAAK0B,UAJd2B,GAAU,GAQPA,EAOJA,CAAQrD,IACPI,EAAMkD,QAAQtD,GA0EmDuD,KAAsBnD,EAAM1B,SAAW,SAAU,aCtF/G,SAAS8E,EAAepD,GAAQ,IAAD,EAEE2B,oBAAS,GAFX,mBAElC0B,EAFkC,KAEfC,EAFe,KAGpCC,EAAWC,cACXC,EAAeC,aAAY,SAAC3E,GAC9B,MAAO,CACHgC,KAAMjC,EAAQC,GACdL,QAASM,EAAWD,GACpBJ,SAAUM,EAAYF,GACtBN,MAAOS,EAAcH,GACrB4E,WAAYxE,EAAeJ,GAC3BH,WAAYQ,EAAoBL,GAChCT,SAAUe,EAAiBN,GAC3BF,UAAWS,EAAaP,OAsBhC,OAVA6E,qBAAU,WACN,IAAIC,EAAU,GACdA,EAAQnF,QAAU+E,EAAa/E,QAC/BmF,EAAQlF,SAAW8E,EAAa9E,SAChC4E,GJwDG,SAACA,GACJ5G,EAAQ,qBAAsB,OAAQ,IAAIa,MAAK,SAAAsG,GACxCA,GAAsB,YAAfA,EAAI9F,QACVuF,EAVL,CACHtF,KA7FqB,gBA8FrBY,UAQ+BiF,EAAIC,KAAKlF,kBI1DxC0E,EJzBD,SAAyBM,GAC5B,OAAO,SAACN,GACJA,EAASxF,GAA6B,IACtCpB,EAAQ,uBAAwB,OAAQkH,GAASrG,MAAK,SAAAsG,GApBvD,IAA4BC,EAAMrF,EAqB7BsF,QAAQC,IAAI,MAAOH,GAChBA,GAAsB,YAAfA,EAAI9F,OACVuF,GAvBmBQ,EAuBSD,EAAIC,KAvBPrF,EAuBamF,EAAQnF,QAtBnD,CACHT,KAV4B,uBAW5BO,MAAOuF,EAAKG,YACZzF,MAAOsF,EAAKtF,MACZC,QAASA,EACTR,sBAAsB,KAmBdqF,EAASxF,GAA6B,QIiBrCoG,CAAgBN,MAC1B,CAACJ,EAAahF,QAEjBuF,QAAQC,IAAI,kBAAmBR,EAAczD,GAGzC,yBAAKC,UAAU,cACX,6BACI,gDAEJ,6BACI,kBAACF,EAAD,CACItB,MAAOgF,EAAahF,MACpBsC,KAAM0C,EAAa1C,KACnBT,aAAemD,EAAa1C,MAAQ0C,EAAa1C,KAAKC,OAAS,EAAIyC,EAAa1C,KAAKC,OAAS,EAC9FtC,QAAS+E,EAAa/E,QACtBC,SAAU8E,EAAa9E,SACvBC,WAAY6E,EAAa7E,WACzB+E,WAAYF,EAAaE,WACzBpC,WAhCG,SAACnD,GAChBmF,EJiBD,SAA2BnF,GAC9B,OAAO,SAACmF,GACJA,EAASpF,EAA6BC,GAAI,IAC1CzB,EAAQ,mBAAD,OAAoByB,EAApB,WAAiC,OAAQ,IAAIZ,MAAK,SAAAsG,GAClDA,GAAsB,YAAfA,EAAI9F,OACVuF,EAZT,SAAwBnF,GAC3B,MAAO,CACHH,KA/C8B,yBAgD9BG,GAAIA,GASagG,CAAehG,IAExBmF,EAASpF,EAA6BC,GAAI,QIxBzCiG,CAAkBjG,KAgCfqC,gBAAiB,kBAAM6C,GAAc,MAGrCD,EACI,kBAAC,EAAD,CACIiB,UAAWjB,EACXnB,MAAO,kBAAMoB,GAAc,IAC3BJ,QApCR,SAACtD,GACb2D,EJ0CD,SAAuB3D,GAC1B,OAAO,SAAC2D,GACJA,EAASlF,GAAkB,IAC3B1B,EAAQ,sBAAuB,OAAQ,CAAC4H,WAAY3E,IAAOpC,MAAK,SAAAsG,GACzDA,GAAsB,YAAfA,EAAI9F,OACVuF,EApBT,SAAqB3D,GACxB,MAAO,CACH3B,KAnEqB,gBAoErB2B,KAAMA,EACNtB,UAAU,GAgBOkG,CAAYV,EAAIC,KAAKQ,aAE9BhB,EAASlF,GAAkB,QIjD1BoG,CAAc7E,KAoCHf,UAAW4E,EAAa5E,YACvB,OChFd,SAAS6F,EAAO1E,GAE3B,OACI,yBAAKC,UAAU,UACX,wCCJG,SAAS0E,EAAO3E,GAE3B,OACI,yBAAKC,UAAU,UACX,iDCKG,SAAS2E,EAAI5E,GAC1B,OACI,yBAAKE,MAAO,CAAE2E,gBAAiB,OAAQzE,MAAO,OAAQ0E,SAAU,aAC5D,6BACI,kBAACJ,EAAD,OAEJ,yBAAKzE,UAAU,aACX,kBAACmD,EAAD,OAEJ,6BACI,kBAACuB,EAAD,QCTMI,QACW,cAA7B/H,OAAOgI,SAASC,UAEe,UAA7BjI,OAAOgI,SAASC,UAEhBjI,OAAOgI,SAASC,SAASC,MACvB,2DCRN,IAAMC,EAAY,CACdC,YAAgBC,MAYdC,EAAQC,YAAYhG,EAVP,CACff,MAAO,GACPC,MAAO,EACPC,QAAS,EACTC,SAAU,GACVT,sBAAsB,EACtBU,WAAY,GACZN,UAAU,EACVO,UAAW,IAEqC2G,IAAO,WAAP,EAAWL,IAC/DM,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAACV,EAAD,OAEJe,SAASC,eAAe,SDuGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvI,MAAK,SAAAwI,GACJA,EAAaC,gBAEdC,OAAM,SAAApI,GACLkG,QAAQlG,MAAMA,EAAMqI,c","file":"static/js/main.fcbd53b0.chunk.js","sourcesContent":["import fetch from 'isomorphic-fetch';\n\n// export const API_URL = 'http://localhost:8080';\nexport const API_URL = 'https://techamity-ejam.herokuapp.com';\n\nexport default function callApi(endpoint, method = 'get', body) {\n    let token = window.localStorage.getItem('token') ?  window.localStorage.getItem('token') : '';\n    let headers = {};\n    headers['content-type'] = 'application/json';\n    if (token && token !=='') {\n        headers.Authorization = `Bearer ${token}`;\n    }\n    return fetch(`${API_URL}/${endpoint}`, {\n        headers: headers,\n        method,\n        body: JSON.stringify(body),\n    })\n        .then(response => response.json().then(json => ({json, response})))\n        .then(({json, response}) => {\n            if (!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n        .then(\n            response => response,\n            error => error\n        );\n}\n","import callApi from \"../util/apiCaller\";\n\n\nexport const LOAD_DEPLOYMENT_LIST = 'LOAD_DEPLOYMENT_LIST';\nexport const LOAD_DEPLOYMENT_FETCHING_STATUS = 'LOAD_DEPLOYMENT_FETCHING_STATUS';\nexport const LOAD_DEPLOYMENT_DELETE_STATUS = 'LOAD_DEPLOYMENT_DELETE_STATUS';\nexport const LOAD_DELETE_DEPLOYMENT = 'LOAD_DELETE_DEPLOYMENT';\nexport const LOAD_ADD_ITEM = 'LOAD_ADD_ITEM';\nexport const LOAD_ADD_ITEM_STATUS = 'LOAD_ADD_ITEM_STATUS';\nexport const LOAD_TEMPLATE = 'LOAD_TEMPLATE';\n\nexport function loadDeploymentList(data, pageNum) {\n    return {\n        type: LOAD_DEPLOYMENT_LIST,\n        items: data.deployments,\n        count: data.count,\n        pageNum: pageNum,\n        isFetchingDeployment: false\n    }\n}\n\nexport function loadDeploymentFetchingStatus(status) {\n    return {\n        type: LOAD_DEPLOYMENT_FETCHING_STATUS,\n        isFetchingDeployment: !!status\n    }\n}\n\nexport function fetchDeployment(filters) {\n    return (dispatch) => {\n        dispatch(loadDeploymentFetchingStatus(true));\n        callApi(`api/deployments/list`, 'post', filters).then(res => {\n            console.log('res', res);\n            if(res && res.status === 'Success') {\n                dispatch(loadDeploymentList(res.data, filters.pageNum));\n            } else {\n                dispatch(loadDeploymentFetchingStatus(false));\n\n            }\n        })\n    }\n}\n\nexport function loadDeploymentDeletingStatus(id, status) {\n    return {\n        type: LOAD_DEPLOYMENT_DELETE_STATUS,\n        id: id,\n        status: !!status\n    }\n}\n\nexport function loadDeleteItem(id) {\n    return {\n        type: LOAD_DELETE_DEPLOYMENT,\n        id: id\n    }\n}\n\nexport function deleteDeployments(id) {\n    return (dispatch) => {\n        dispatch(loadDeploymentDeletingStatus(id, true));\n        callApi(`api/deployments/${id}/remove`, 'post', {}).then(res => {\n            if(res && res.status === 'Success') {\n                dispatch(loadDeleteItem(id));\n            } else {\n                dispatch(loadDeploymentDeletingStatus(id, false));\n\n            }\n        })\n    }\n}\n\nexport function loadAddItem(item) {\n    return {\n        type: LOAD_ADD_ITEM,\n        item: item,\n        isAdding: false\n    }\n}\n\nexport function loadAddItemStatus(status) {\n    return {\n        type: LOAD_ADD_ITEM_STATUS,\n        isAdding: !!status\n    }\n}\n\nexport function addDeployment(item) {\n    return (dispatch) => {\n        dispatch(loadAddItemStatus(true));\n        callApi('api/deployments/new', 'post', {deployment: item}).then(res => {\n            if(res && res.status === 'Success') {\n                dispatch(loadAddItem(res.data.deployment));\n            } else {\n                dispatch(loadAddItemStatus(false));\n            }\n        })\n    }\n}\n\nexport function loadTemplates(templates) {\n    return {\n        type: LOAD_TEMPLATE,\n        templates: templates\n    }\n}\n\nexport function fetchTemplates() {\n    return (dispatch) => {\n        callApi('api/templates/list', 'post', {}).then(res => {\n            if(res && res.status === 'Success') {\n                dispatch(loadTemplates(res.data.templates));\n            }\n        })\n    }\n}\n","import _ from 'lodash';\nimport {\n    LOAD_DEPLOYMENT_LIST,\n    LOAD_DEPLOYMENT_FETCHING_STATUS,\n    LOAD_DELETE_DEPLOYMENT,\n    LOAD_DEPLOYMENT_DELETE_STATUS,\n    LOAD_ADD_ITEM_STATUS,\n    LOAD_ADD_ITEM,\n    LOAD_TEMPLATE\n} from './AppActions';\n\n// initial state\n const initialState = {\n    items: [],\n    count: 0,\n    pageNum: 1,\n    pageSize: 15,\n    isFetchingDeployment: false,\n    isDeleting: {},\n    isAdding: false,\n     templates: []\n}\n\n// reducer function\n const appReducer = (state = initialState, action) => {\n     let isDeleting = state.isDeleting;\n     let items = _.clone(state.items);\n    switch (action.type) {\n        case LOAD_DEPLOYMENT_LIST:\n            return {\n                ...state,\n                items: action.items,\n                count: action.count,\n                pageNum: action.pageNum,\n                isFetchingDeployment: false\n            };\n\n        case LOAD_DEPLOYMENT_FETCHING_STATUS:\n            return {\n                ...state,\n                isFetchingDeployment: action.isFetchingDeployment\n            }\n\n        case LOAD_DEPLOYMENT_DELETE_STATUS:\n            isDeleting[action.id] = action.status;\n            return {\n                ...state,\n                isDeleting: isDeleting\n            }\n\n        case LOAD_DELETE_DEPLOYMENT:\n            isDeleting[action.id] = false;\n            items = items.filter(item => item._id !== action.id);\n            return {\n                ...state,\n                items: items,\n                count: state.count - 1\n            }\n\n        case LOAD_ADD_ITEM_STATUS:\n            return {\n                ...state,\n                isAdding: action.isAdding\n            }\n\n        case LOAD_ADD_ITEM:\n            items.push(action.item);\n            return {\n                ...state,\n                items: items,\n                count: state.count + 1,\n                isAdding: action.isAdding\n            }\n\n        case LOAD_TEMPLATE:\n            return {\n                ...state,\n                templates: action.templates\n            }\n\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\n// selectors\nexport const getList = (state) => state.items;\nexport const getPageNum = (state) => state.pageNum;\nexport const getPageSize = (state) => state.pageSize;\nexport const getTotalCount = (state) => state.count;\nexport const getFetchStatus = (state) => state.isFetchingDeployment;\nexport const getDeleteItemStatus = (state) => state.isDeleting;\nexport const getAddItemStatus = (state) => state.isAdding;\nexport const getTemplates = (state) => state.templates;\n\nexport default appReducer;\n","import React from 'react';\nimport {Button} from \"react-bootstrap\";\n\nexport default function ListTable(props) {\n    return(\n        <div className=\"panel\">\n            <div className=\"panel-header\">\n                <div style={{ display: 'inline-flex', width: '100%', justifyContent: 'space-between' }}>\n                    <div>{`Showing Item ( ${props.currentCount} )`}</div>\n                    <div>\n                        <Button onClick={() => props.openAddItemForm()}>Add Item</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"panel-body\">\n                <table className=\"table\" style={{ width: '100%', textAlign: 'left', border: '1px solid #cdcdcd', borderRadius: '3px' }}>\n                    <tr>\n                        <th style={{ padding: '8px 10px', minWidth: '30px' }}>Sr. No</th>\n                        <th style={{ padding: '8px', minWidth: '50px' }}>Url</th>\n                        <th style={{ padding: '8px 10px', minWidth: '50px' }}>Template Name</th>\n                        <th style={{ padding: '8px 10px', minWidth: '50px' }}>Version</th>\n                        <th style={{ padding: '8px 10px', minWidth: '50px' }}>Action</th>\n                    </tr>\n                    {\n                        props.list && props.list.length > 0 ? props.list.map((item, index) => (\n                            <tr style={{ color: '#737373' }}>\n                                <td style={{ padding: '8px 10px', minWidth: '30px' }}>{index + 1}</td>\n                                <td style={{ padding: '8px 10px', minWidth: '50px' }}>{item.url}</td>\n                                <td style={{ padding: '8px 10px', minWidth: '30px' }}>{item.templateName}</td>\n                                <td style={{ padding: '8px 10px', minWidth: '30px' }}>{item.version}</td>\n                                <td style={{ padding: '8px 10px', minWidth: '30px' }}>\n                                    <Button onClick={() => props.deleteItem(item._id)} disabled={props.isDeleting[item._id]}>{props.isDeleting[item._id] ? 'Deleting' : 'Delete'}</Button>\n                                </td>\n                            </tr>\n                        )) :\n                            <tr>\n                                <td colSpan={17} style={{textAlign: 'center'}}>\n                                    <h1>\n                                        No data\n                                    </h1>\n                                </td>\n                            </tr>\n                    }\n                </table>\n            </div>\n            <div className=\"panel-footer\">\n                <span>{`Showing ${(props.pageNum - 1) * props.pageSize} to ${props.currentCount} of ${props.count} entries`}</span>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport _ from 'lodash';\nimport {\n    Button,\n    FormControl,\n    Form,\n    FormGroup,\n    Col,\n    Modal,\n} from 'react-bootstrap';\n\nfunction AddNewItemForm(props) {\n    const [versions, handleVersion] = useState([]);\n    const [version, handleVersionChange] = useState('');\n    const [url, handleUrl] = useState('');\n    const [template, handleTemplate] = useState({});\n    const isValid = (item) => {\n        let isValid = true;\n        if(!!!item.url) {\n            isValid = false;\n        } else if(!!!item.templateName) {\n            isValid = false;\n\n        } else if(!!!item.version) {\n            isValid = false;\n\n        }\n        return isValid;\n    }\n    const handleAddNewItem = () => {\n        let item = {};\n        item.url = url;\n        item.templateName = template.name;\n        item.version = version;\n        if(isValid(item)) {\n            props.addItem(item);\n        }\n    }\n    const handleSelectTemplate = (id) => {\n        if(id === '') {\n            handleTemplate({});\n            handleVersion([]);\n            handleVersionChange('');\n        } else {\n            props.templates.forEach(item => {\n                if(item._id === id) {\n                    handleTemplate(item);\n                    handleVersion(item.versions);\n                }\n            });\n        }\n    }\n    return(\n        <div className=\"add-overlay\">\n            <div onClick={() => props.close()} className=\"add-overlay-background\"></div>\n            <div className=\"overlay-wrapper\">\n                <div className=\"overlay\">\n                    <div className=\"overlay-header\">\n                        Add Deployment\n                    </div>\n                    <div className=\"overlay-body\">\n                        <Form horizontal>\n                            <FormGroup style={{marginBottom: '15px'}}>\n                                <div className=\"input-label\">\n                                    URL <span style={{color: 'red'}}>*</span>\n                                </div>\n                                <div>\n                                    <FormControl\n                                        onChange={(e) => handleUrl(e.target.value)}\n                                        type=\"text\"\n                                        className=\"input-style\"\n                                        placeholder={\"Enter Url \"} />\n                                </div>\n                            </FormGroup>\n                            <FormGroup style={{marginBottom: '15px'}}>\n                                <div className=\"input-label\">\n                                    Template Name <span style={{color: 'red'}}>*</span>\n                                </div>\n                                <Col sm={7}>\n                                    <select   className=\"input-style\" name=\"\" id=\"\" onChange={(e) => handleSelectTemplate(e.target.value)}>\n                                        <option value=\"\">-- Select Template --</option>\n                                        {\n                                            props.templates && props.templates.length > 0 && props.templates.map(item => (\n                                                <option value={item._id}>{item.name}</option>\n                                            ))\n                                        }\n                                    </select>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup style={{marginBottom: '15px'}}>\n                                <div className=\"input-label\">\n                                    Version <span style={{color: 'red'}}>*</span>\n                                </div>\n                                <Col sm={7}>\n                                    <select className=\"input-style\" disabled={versions.length === 0} name=\"\" id=\"\" onChange={(e) => handleVersionChange(e.target.value)}>\n                                        <option value=\"\">-- Select Version --</option>\n                                        {\n                                            versions && versions.length > 0 && versions.map(item => (\n                                                <option value={item}>{item}</option>\n                                            ))\n                                        }\n                                    </select>\n                                </Col>\n                            </FormGroup>\n                        </Form>\n                    </div>\n                    <div className=\"overlay-footer\">\n                        <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n                            <Button onClick={() => props.close()}>Close</Button>\n                            <Button disabled={props.isAdding} onClick={() => handleAddNewItem()} >{props.isAdding ? 'Adding': 'Add'}</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AddNewItemForm;\n","import React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {\n    addDeployment,\n    deleteDeployments,\n    fetchDeployment, fetchTemplates,\n    loadDeleteItem\n} from '../AppActions';\nimport {\n    getTotalCount,\n    getPageSize,\n    getPageNum,\n    getList,\n    getDeleteItemStatus,\n    getFetchStatus,\n    getAddItemStatus,\n    getTemplates\n} from '../AppReducer';\nimport ListTable from \"./components/ListTable\";\nimport AddNewItemForm from \"./components/AddNewItemForm\";\n\n\n\nexport default function DeploymentList(props) {\n\n    const [ isOpenAddItemForm, handleAddItem] = useState(false);\n    const dispatch = useDispatch();\n    const currentState = useSelector((state) => {\n        return {\n            list: getList(state),\n            pageNum: getPageNum(state),\n            pageSize: getPageSize(state),\n            count: getTotalCount(state),\n            isFetching: getFetchStatus(state),\n            isDeleting: getDeleteItemStatus(state),\n            isAdding: getAddItemStatus(state),\n            templates: getTemplates(state)\n        }\n    })\n\n    const deleteItem = (id) => {\n        dispatch(deleteDeployments(id));\n    }\n\n    const addItem = (item) => {\n        dispatch(addDeployment(item));\n    }\n\n    useEffect(() => {\n        let filters = {};\n        filters.pageNum = currentState.pageNum;\n        filters.pageSize = currentState.pageSize;\n        dispatch(fetchTemplates());\n        dispatch(fetchDeployment(filters));\n    }, [currentState.count]);\n\n    console.log('deployment list', currentState, props);\n\n    return(\n        <div className=\"deployment\">\n            <div>\n                <h2>Deployment List</h2>\n            </div>\n            <div>\n                <ListTable\n                    count={currentState.count}\n                    list={currentState.list}\n                    currentCount={ currentState.list && currentState.list.length > 0 ? currentState.list.length : 0 }\n                    pageNum={currentState.pageNum}\n                    pageSize={currentState.pageSize}\n                    isDeleting={currentState.isDeleting}\n                    isFetching={currentState.isFetching}\n                    deleteItem={deleteItem}\n                    openAddItemForm={() => handleAddItem(true)}\n                />\n                {\n                    isOpenAddItemForm ?\n                        <AddNewItemForm\n                            showModal={isOpenAddItemForm}\n                            close={() => handleAddItem(false)}\n                            addItem={addItem}\n                            templates={currentState.templates}\n                        /> : null\n                }\n\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function Header(props) {\n\n    return(\n        <div className=\"header\">\n            <span>E-Jam</span>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\n\nexport default function Footer(props) {\n\n    return(\n        <div className=\"footer\">\n            <span>Copyright@2020</span>\n        </div>\n    )\n}\n","/**\n * Root Component\n */\nimport React from 'react';\n\n\n\nimport DeploymentList from \"./app/DeploymentList/DeploymentList\";\nimport Header from \"./app/components/Header\";\nimport Footer from \"./app/components/Footer\";\n\nexport default function App(props) {\n  return (\n      <div style={{ backgroundColor: '#fff', width: '100%', position: 'relative' }}>\n          <div>\n              <Header/>\n          </div>\n          <div className=\"container\">\n              <DeploymentList/>\n          </div>\n          <div>\n              <Footer/>\n          </div>\n      </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { createStore,  applyMiddleware, compose  } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport appReducer from './app/AppReducer';\n\nconst enhancers = [\n    applyMiddleware(thunk)\n];\nvar initialState = {\n    items: [],\n    count: 0,\n    pageNum: 1,\n    pageSize: 15,\n    isFetchingDeployment: false,\n    isDeleting: {},\n    isAdding: false,\n    templates: []\n};\nconst store = createStore(appReducer, initialState, compose(...enhancers));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}